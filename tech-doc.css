@import url('https://fonts.googleapis.com/css2?family=Ubuntu:wght@300;500&display=swap');

/* #14 On large screens, navbar is on left and always visible */
/* #15 uses at least one media query */
*,
*::before,
*::after {
	box-sizing: border-box;
}

body {
	max-width: 100%;
	display: flex;
	font-family: 'Ubuntu', sans-serif;
	font-weight: 300;
}

.container {
	width: 100%;
	max-width: 100%;
}

header {
	font-weight: 500;
	font-size: 28px;
}

nav {
	width: 20%;
	height: 100%;
	display: flex;
	flex-direction: column;
	border-right: 5px solid #000b;
	position: fixed;
	overflow: scroll;
	min-width: 290px;
	padding-top:10px;
}

nav header {
  padding-left: 25px;
}

nav .fa-bars,
nav .fa-times {
  display: none;
}

nav ul {
  padding-left: 0;
}

nav ul li:last-child {
  border-bottom: 1px solid black;
}

nav ul li {
  width: 100%;
  border-top: 1px solid black;
  list-style-type: none;
  font-size: 18px;
}

nav ul li a {
  text-decoration: none;
  color: black;
  width: 100%;
  height: 100%;
  padding: 15px 0 15px 25px;
  display: inline-block;
  width: 85%;
}

nav ul li i {
  height: 100%;
  width: 10%;
  align-self: center;
  justify-self: center;
  cursor: pointer;
}

nav ul li i.hide {
  transition: display .5s;
  display: none;
}

nav ul li i.show {
  transition: display .5s;
  display: inline-block;
}

nav ul.sub-menu {
  display: none;
}

nav ul.sub-menu li a {
  padding: 5px 0 5px 40px;
  width: 100%;
}

nav ul.sub-menu li a:hover {
  background-color: #eb403466;
}

main {
	width: 80%;
	margin-left: 20%;
	padding: 30px;
	display: flex;
  flex-direction: column;
}

main section header {
  background-color: #69d3e7;
  width: 100%;
  padding: 10px;
}

main section article {
  padding-left: 20px;
}

main section article a {
  color: #eb4034;
  text-decoration: none;
}

main section article a:hover,
main section article a:active {
  text-decoration: underline;
}

main section article code {
  color: #eb4034;
}

main section.sub-section header {
  background-color: #eb4034;
  color: white;
  width: 98%;
  float: right;
  font-size: 20px;
  margin: 20px 0;
  padding: 10px 30px;
}

main section.sub-section article p {
  padding-left: 40px;
}

main section.sub-section article ul {
  margin-left: 40px;
}

main section.sub-section article pre {
  width: 95%;
  margin: 20px 40px;
  background-color: #ddd;
  padding: 15px 20px;
  border-left: 5px solid #69d3e7;
}

main section.sub-section article div.grid-table {
  display: grid;
  width: 95%;
  border: 3px solid #69d3e7;
  margin: 0 40px;
}

main section.sub-section article div.grid-table .col-title {
  color: #eb4034;
  font-weight: bold;
}

main section.sub-section article div.grid-table div {
  border: 1px solid #69d3e7;
  margin: 0;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}

main section.sub-section article div.grid-table p {
  padding: 0;
}

main section.sub-section article div.grid-table#rm-grid-table {
  grid-template-columns: 1fr 3fr 2fr;
  grid-template-rows: 1fr 3fr 3fr 3fr 2fr;
  grid-template-areas:
    "value  value_description  equivalent"
    "zero			zerodescription		 	 zeroequivalent"
    "one			onedescription		   oneequivalent"
    "two			twodescription		   twoequivalent"
    "three		threedescription		 threeequivalent";
}

main section.sub-section article div.grid-table#cmp-grid-table {
  grid-template-columns: 1fr 2fr;
  grid-template-rows: 1fr 2fr 2fr 2fr;
  grid-template-areas: 
    "returns returns-when"
    "cmp-pos1 explanation-pos1"
    "cmp-neg1 explanation-neg1"
    "cmp-0 explanation-0";
}

main section.sub-section article div.grid-table#props-grid-table {
  grid-template-columns: 1fr 2fr 2fr 3fr;
  grid-template-rows: repeat(4, 1fr);
  grid-template-areas: 
    "property description type prop-value"
    "c-prop c-desc c-type c-value"
    "e-prop e-desc e-type e-value"
    "s-prop s-desc s-type s-value";
}

main section.sub-section article div.grid-table#errors-grid-table {
  grid-template-columns: repeat(3, 1fr);
  grid-template-rows: 
    1fr 
    repeat(2, 2fr)
    repeat(3, 1fr)
    1fr
    repeat(3, 1fr)
    repeat(2, 1fr)
    repeat(2, 1fr)
    repeat(3, 1fr)
    1fr
    repeat(2, 1fr);
  grid-template-areas:
    "methods message throws-when"
    "methods1 error1a throw1a"
    "methods1 error1b throw1b"
    "methods2 error2a throw2a"
    "methods2 error2b throw2b"
    "methods2 error2c throw2c"
    "methods3 error3 throw3"
    "methods4 error4a throw4a"
    "methods4 error4b throw4b"
    "methods4 error4c throw4c"
    "methods5 error5a throw5a"
    "methods5 error5b throw5b"
    "methods6 error6a throw6a"
    "methods6 error6b throw6b"
    "methods7 error7a throw7a"
    "methods7 error7b throw7b"
    "methods7 error7c throw7c"
    "methods8 error8a throw8a"
    "methods8 error8b throw8b"
    "methods9 error9a throw9a"
    "methods9 error9b throw9b"
    "methods10 error10 throw10"
    "methods11 error11a throw11a"
    "methods11 error11b throw11b"
    "methods12 error12 throw12";
}

#value {
  grid-area: value;
}
#value-description {
  grid-area: valuedescription;
}
#equivalent {
  grid-area: equivalent;
}
#0 {
  grid-area: zero;
}
#0-description {
  grid-area: zerodescription;
}
#0-equivalent {
  grid-area: zeroequivalent;
}
#1 {
  grid-area: one;
}
#1-description {
  grid-area: onedescription;
}
#1-equivalent {
  grid-area: oneequivalent;
}
#2 {
  grid-area: two;
}
#2-description {
  grid-area: twodescription;
}
#2-equivalent {
  grid-area: twoequivalent;
}
#3 {
  grid-area: three;
}
#3-description {
  grid-area: threedescription;
}
#3-equivalent {
  grid-area: threeequivalent;
}
#returns {
  grid-area: returns;
}
#returns-when {
  grid-area: returns-when;
}
#cmp-pos1 {
  grid-area: cmp-pos1;
}
#explanation-pos1 {
  grid-area: explanation-pos1;
}
#cmp-neg1 {
  grid-area: cmp-neg1;
}
#explanation-neg1 {
  grid-area: explanation-neg1;
}
#cmp-0 {
  grid-area: cmp-0;
}
#explanation-0 {
  grid-area: explanation-0;
}
#property {
  grid-area: property;
}
#description {
  grid-area: description;
}
#type {
  grid-area: type;
}
#prop-value {
  grid-area: prop-value;
}
#c-prop {
  grid-area: c-prop;
}
#c-desc {
  grid-area: c-desc;
}
#c-type {
  grid-area: c-type;
}
#c-value {
  grid-area: c-value;
}
#e-prop {
  grid-area: e-prop;
}
#e-desc {
  grid-area: e-desc;
}
#e-type {
  grid-area: e-type;
}
#e-value {
  grid-area: e-value;
}
#s-prop {
  grid-area: s-prop;
}
#s-desc {
  grid-area: s-desc;
}
#s-type {
  grid-area: s-type;
}
#s-value {
  grid-area: s-value;
}
#methods {
  grid-area: methods;
}
#message {
  grid-area: message;
}
#throws-when {
  grid-area: throws-when;
}
#methods1 {
  grid-area: methods1;
}
#methods1 ul {
  list-style-type: none;
  padding-left: 0;
  text-align: center;
}
#error1a {
  grid-area: error1a;
}
#error1b {
  grid-area: error1b;
}
#throw1a {
  grid-area: throw1a;
}
#throw1b {
  grid-area: throw1b;
}
#methods2 {
  grid-area: methods2;
}
#error2a {
  grid-area: error2a;
}
#error2b {
  grid-area: error2b;
}
#error2c {
  grid-area: error2c;
}
#throw2a {
  grid-area: throw2a;
}
#throw2b {
  grid-area: throw2b;
}
#throw2c {
  grid-area: throw2c;
}
#methods3 {
  grid-area: methods3;
}
#error3 {
  grid-area: error3;
}
#throw3 {
  grid-area: throw3;
}
#methods4 {
  grid-area: methods4;
}
#error4a {
  grid-area: error4a;
}
#error4b {
  grid-area: error4b;
}
#error4c {
  grid-area: error4c;
}
#throw4a {
  grid-area: throw4a;
}
#throw4b {
  grid-area: throw4b;
}
#throw4c {
  grid-area: throw4c;
}
#methods5 {
  grid-area: methods5;
}
#error5a {
  grid-area: error5a;
}
#error5b {
  grid-area: error5b;
}
#throw5a {
  grid-area: throw5a;
}
#throw5b {
  grid-area: throw5b;
}
#methods6 {
  grid-area: methods6;
}
#error6a {
  grid-area: error6a;
}
#error6b {
  grid-area: error6b;
}
#throw6a {
  grid-area: throw6a;
}
#throw6b {
  grid-area: throw6b;
}
#methods7 {
  grid-area: methods7;
}
#error7a {
  grid-area: error7a;
}
#error7b {
  grid-area: error7b;
}
#error7c {
  grid-area: error7c;
}
#throw7a {
  grid-area: throw7a;
}
#throw7b {
  grid-area: throw7b;
}
#throw7c {
  grid-area: throw7c;
}
#methods8 {
  grid-area: methods8;
}
#error8a {
  grid-area: error8a;
}
#error8b {
  grid-area: error8b;
}
#throw8a {
  grid-area: throw8a;
}
#throw8b {
  grid-area: throw8b;
}
#methods9 {
  grid-area: methods9;
}
#error9a {
  grid-area: error9a;
}
#error9b {
  grid-area: error9b;
}
#throw9a {
  grid-area: throw9a;
}
#throw9b {
  grid-area: throw9b;
}
#methods10 {
  grid-area: methods10;
}
#error10 {
  grid-area: error10;
}
#throw10 {
  grid-area: throw10;
}
#methods11 {
  grid-area: methods11;
}
#error11a {
  grid-area: error11a;
}
#error11b {
  grid-area: error11b;
}
#throw11a {
  grid-area: throw11a;
}
#throw11b {
  grid-area: throw11b;
}
#methods12 {
  grid-area: methods12;
}
#error12 {
  grid-area: error12;
}
#throw12 {
  grid-area: throw12;
}

@media screen and (max-width: 1300px) {
	.container {
		display: flex;
		flex-direction: column;
	}
	nav#navbar {
		width: 100%;
		min-width: 0px;
		padding: 0 20%;
		display: flex;
		flex-direction: column;
		position: static;
		justify-content: center;
		align-items: center;
  }

  nav#navbar header {
    padding-top: 10px;
    align-self: center;
  }


  nav#navbar .fa-bars,
  nav#navbar .fa-times {
    display: inline-block;
    position: absolute;
    top: 10px;
  }
  nav#navbar .fa-bars {
    right: 30px;
  }
  nav#navbar .fa-times {
    right: 33px;
    display: none;
  }
  nav#navbar ul {
    width: 100%;
  }
  nav#navbar > ul {
    display: none;
  }

	main {
		width: 100%;
		margin: 0;
	}
}